name: Publish Python Package
on:
  workflow_run:
    workflows: ["Build Python Package"]
    types:
      - completed
    branches:
      - main
env:
  CLOUDSMITH_NAMESPACE: ${{ vars.CLOUDSMITH_NAMESPACE }}
  CLOUDSMITH_REPOSITORY: "staging"
  CLOUDSMITH_SERVICE_SLUG: ${{ vars.CLOUDSMITH_SERVICE_SLUG }}
permissions:
  contents: read
  actions: read
  id-token: write
jobs:
  publish:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event.workflow_run.conclusion == 'neutral' }}
    steps:
      - name: Download artifact1
        uses: actions/download-artifact@v4
        with:
          name: python-package
          path: dist
          repository: ${{ github.repository }}
          github-token: ${{ github.token }}
          run-id: ${{ github.event.workflow_run.id }}
      - name: Install Cloudsmith CLI
        run: |
          pip install --upgrade cloudsmith-cli
        shell: bash
      - name: List directory contents
        run: ls -la dist/
        shell: bash
      - name: Get OIDC Token from GitHub and Exchange with Cloudsmith
        run: |
          echo "🔐 Requesting OIDC token from GitHub..."

          oidc_token=$(curl -s -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \"${ACTIONS_ID_TOKEN_REQUEST_URL}&audience=https://github.com/rini-jain" | jq -r '.value')

          echo "🔁 Exchanging token with Cloudsmith..."
          cloudsmith_token=$(curl -s -X POST -H "Content-Type: application/json" \-d "{\"oidc_token\":\"$oidc_token\", \"service_slug\":\"${{ env.CLOUDSMITH_SERVICE_SLUG }}\"}" \ "https://api.cloudsmith.io/openid/${{ env.CLOUDSMITH_NAMESPACE }}/" | jq -r '.token')

          if [ -n "$cloudsmith_token" ]; then
            echo "CLOUDSMITH_API_KEY=$cloudsmith_token" >> $GITHUB_ENV
            echo "✅ Token exchange succeeded"
          else
            echo "❌ Token exchange failed"
            exit 1
          fi

      - name: Debug OIDC Token
        run: |
            echo "ACTIONS_ID_TOKEN_REQUEST_URL: $ACTIONS_ID_TOKEN_REQUEST_URL"
            echo "ACTIONS_ID_TOKEN_REQUEST_TOKEN: $ACTIONS_ID_TOKEN_REQUEST_TOKEN"
      - name: Push package to the Cloudsmith1
        run: |
          if ! ls dist/*.tar.gz 1> /dev/null 2>&1; then
            echo "No package found to upload"
            exit 1
          fi
          cloudsmith push python ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_REPOSITORY }} dist/*.tar.gz --republish
        shell: bash
