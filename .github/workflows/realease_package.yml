name: Publish Python Package

on:
  workflow_run:
    workflows: ["Build Python Package"]
    types:
      - completed
    branches:
      - main

env:
  CLOUDSMITH_NAMESPACE: ${{ vars.CLOUDSMITH_NAMESPACE }}
  CLOUDSMITH_REPOSITORY: ${{ vars.CLOUDSMITH_REPOSITORY }}
  CLOUDSMITH_SERVICE_SLUG: ${{ vars.CLOUDSMITH_SERVICE_SLUG }}

permissions:
  contents: read
  actions: read
  id-token: write

jobs:
  publish:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: python-package
          path: dist

      - name: Install Cloudsmith CLI
        run: pip install --upgrade cloudsmith-cli

      - name: Get OIDC token
        run: |
          OIDC_TOKEN=$(curl -s \
            -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
            "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=api://AzureADTokenExchange" \
            | jq -r '.value')

          CLOUDSMITH_TOKEN=$(curl -s -X POST \
            "https://api.cloudsmith.io/openid/${{ env.CLOUDSMITH_NAMESPACE }}/" \
            -H "Content-Type: application/json" \
            -d "{\"oidc_token\":\"$OIDC_TOKEN\", \"service_slug\":\"${{ env.CLOUDSMITH_SERVICE_SLUG }}\"}" \
            | jq -r '.token')

          echo "CLOUDSMITH_API_KEY=$CLOUDSMITH_TOKEN" >> $GITHUB_ENV
          echo "::add-mask::$CLOUDSMITH_TOKEN"

      - name: Push package to Cloudsmith
        run: |
          if [ -z "$CLOUDSMITH_API_KEY" ]; then
            echo "‚ùå Missing Cloudsmith API Key"
            exit 1
          fi

          cloudsmith push python \
            ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_REPOSITORY }} \
            dist/*.tar.gz \
            --api-key="$CLOUDSMITH_API_KEY" \
            --republish \
            --verbose