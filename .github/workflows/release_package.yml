name: Publish Python Package

on:
  workflow_run:
    workflows: ["Build Python Package"]
    types:
      - completed
    branches:
      - main

permissions:
  contents: read
  actions: read
  id-token: write

jobs:
  publish:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: python-package
          path: dist
          repository: ${{ github.repository }}
          github-token: ${{ github.token }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: List directory contents
        run: ls -la dist/
        shell: bash

      - name: Generate OIDC Token
        run: |
          echo "Requesting OIDC Token..."
          value=$(curl -s -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
          "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=https://github.com/rini-jain")

          # Extract the OIDC token field from JSON
          token=$(echo "$value" | jq '.value')

          # Exchange token with Cloudsmith using fixed service slug + namespace
          token_final=$(curl -s -X POST -H "Content-Type: application/json" \
          -d "{\"oidc_token\":$token, \"service_slug\":\"github-actions-oidc\"}" \
          https://api.cloudsmith.io/openid/rini-jain-rnye/)

          final_api_token=$(echo "$token_final" | jq -r '.token')

          echo "DEBUG - Raw Cloudsmith response:"
          echo "$token_final"
          
          if [ -n "$final_api_token" ]; then
            echo "CLOUDSMITH_API_KEY=$final_api_token" >> $GITHUB_ENV
          else
            echo "❌ Failed to extract short-lived token from Cloudsmith"
            exit 1
          fi

      - name: Push Python Package to Cloudsmith
        run: |
          echo "Pushing package to Cloudsmith..."
          if ! ls dist/*.tar.gz 1> /dev/null 2>&1; then
            echo "No Python package found to upload"
            exit 1
          fi
          cloudsmith push python rini-jain-rnye/staging dist/*.tar.gz --republish
        env:
          CLOUDSMITH_API_KEY: ${{ env.CLOUDSMITH_API_KEY }}
