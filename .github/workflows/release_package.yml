name: Publish Python Package

on:
  workflow_run:
    workflows: ["Build Python Package"]
    types:
      - completed
    branches:
      - main

env:
  CLOUDSMITH_NAMESPACE: ${{ vars.CLOUDSMITH_NAMESPACE }}
  CLOUDSMITH_REPOSITORY: staging
  CLOUDSMITH_SERVICE_SLUG: ${{ vars.CLOUDSMITH_SERVICE_SLUG }}

permissions:
  contents: read
  actions: read
  id-token: write

jobs:
  publish:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: python-package
          path: dist
          repository: ${{ github.repository }}
          github-token: ${{ github.token }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: List directory contents
        run: ls -la dist/
        shell: bash

      - name: Get OIDC token and exchange with Cloudsmith
        run: |
          echo "Namespace: $CLOUDSMITH_NAMESPACE"
          echo "Service Slug: $CLOUDSMITH_SERVICE_SLUG"
          echo "Requesting OIDC token from GitHub..."
          value=$(curl -s -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
          "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=https://github.com/rini-jain")

          token=$(echo "$value" | jq -r '.value')

          echo "Exchanging token with Cloudsmith..."
          token_final=$(curl -s -X POST -H "Content-Type: application/json" \
          -d "{\"oidc_token\":\"$token\", \"service_slug\":\"$CLOUDSMITH_SERVICE_SLUG\"}" \
          https://api.cloudsmith.io/openid/$CLOUDSMITH_NAMESPACE/)

          final_api_token=$(echo "$token_final" | jq -r '.token // empty')

          echo "DEBUG - Final Token:"
          echo "$final_api_token"

          if [ -n "$final_api_token" ]; then
            echo "CLOUDSMITH_API_KEY=$final_api_token" >> $GITHUB_ENV
          else
            echo " Failed to extract token from Cloudsmith"
            exit 1
          fi
        env:
          CLOUDSMITH_NAMESPACE: ${{ vars.CLOUDSMITH_NAMESPACE }}
          CLOUDSMITH_SERVICE_SLUG: ${{ vars.CLOUDSMITH_SERVICE_SLUG }}

      - name: Push package to Cloudsmith
        run: |
          echo "Pushing package to Cloudsmith..."
          if ! ls dist/*.tar.gz 1> /dev/null 2>&1; then
            echo "No package found to upload"
            exit 1
          fi
          cloudsmith push python \
            $CLOUDSMITH_NAMESPACE/$CLOUDSMITH_REPOSITORY \
            dist/*.tar.gz --republish
        shell: bash
        env:
          CLOUDSMITH_API_KEY: ${{ env.CLOUDSMITH_API_KEY }}
          CLOUDSMITH_NAMESPACE: ${{ env.CLOUDSMITH_NAMESPACE }}
          CLOUDSMITH_REPOSITORY: ${{ env.CLOUDSMITH_REPOSITORY }}
